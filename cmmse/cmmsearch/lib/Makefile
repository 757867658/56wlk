###########################################################################
# Automatically generated by pgmake (1.0.1)  							  #
###########################################################################

#################设计系统参数#######################################
WORKROOT	?=	../../
IDLCC	:=	$(WORKROOT)/libsource4/idlcompiler/output/bin/mcy
RPCCC :=  $(WORKROOT)/public/ubrpc/output/bin/ubrpcgen
CC	:=	gcc
CXX	:=	g++
LEX	:=	flex
YACC	:= yacc
CFLAGS	:=	-pipe -Wall -W -g -fPIC
CXXFLAGS	:=	-pipe -Wall -W -g -fPIC 
LEXFLAGS	:=	
YACCFLAGS	:=	
IDLFLAGS	:=  
LINKFLAGS	:=  -rdynamic
LINK	:=	g++
AR	:=	ar cqs
RANLIB	:=	
COMAKE	:=	pgmake

###############panguso lib 的32位 64位支持#################
HARDWARE_PLATFORM := $(shell uname -m)
ifeq ($(HARDWARE_PLATFORM),x86_64)
	lib2=lib2-64
	third=third-64
else
	lib2=lib2
	third=third
endif
##########################################

# 编译参数
DEP_INCPATH =  -I$(WORKROOT)/lab/libsource4/ans/output//include/ -I$(WORKROOT)/lab/libsource4/hilight/output// -I$(WORKROOT)/lab/libsource4/fileblock/output//include/ -I$(WORKROOT)/lab/libsource4/mcpack/output//include/ -I$(WORKROOT)/lab/libsource4/ullib/output//include/ -I$(WORKROOT)/lab/libsource4/dict/output//include/ -I$(WORKROOT)/lab/libsource4/cache/output//include/
DEP_LDFLAGS =  -L$(WORKROOT)/lab/libsource4/cache/output//lib/ -L$(WORKROOT)/lab/libsource4/ullib/output//lib/ -L$(WORKROOT)/lab/libsource4/hilight/output// -L$(WORKROOT)/lab/libsource4/mcpack/output//lib/ -L$(WORKROOT)/lab/libsource4/fileblock/output// -L$(WORKROOT)/lab/libsource4/dict/output//lib/ -L$(WORKROOT)/lab/libsource4/ans/output//
DEP_LDLIBS = -lmcache -lullib -lhilight -lfileblock -luldict -lmcpack
INCPATH =  -I. -I./lib/utils -I./lib/bcommand -I../include
MAKDEP = Makefile.dep


#start target
first : all

############# 默认推到公式
.SUFFIXES: .c .cpp .cc .cxx .C .idl .des
.PRECIOUS: %.cpp

.cpp.o:
	$(CXX) -c -o $@ $<  $(CXXFLAGS) $(CPPFLAGS) $(INCPATH)

.cc.o:
	$(CXX) -c -o $@ $<  $(CXXFLAGS) $(CPPFLAGS) $(INCPATH)

.cxx.o:
	$(CXX) -c -o $@ $<  $(CXXFLAGS) $(CPPFLAGS) $(INCPATH)

.C.o:
	$(CXX) -c -o $@ $<  $(CXXFLAGS) $(CPPFLAGS) $(INCPATH)

.c.o:
	$(CC) -c -o $@ $<  $(CFLAGS) $(CPPFLAGS) $(INCPATH)

.idl.cpp:
	$(IDLCC) --ns=$(*F) -o $* $< $(CPPFLAGS) $(INCPATH) $(IDLFLAGS)

#############
###cpp 支持
%info : %
	ccp $<
#############


#__$MAKEFILE_RULES$__



###############编译目标
all :  target output 
.PHONY : all clean test output pgmake src conf 

target : libutils.a libbcommand.a 
#target : rpcidl libutils.a libbcommand.a 
#target : 
#__$target_CMDLINE$__

rpcidl : 

clean_rpcidl : 


test : 


pgmake :
	-make clean
	-pgmake 

#-include $(MAKDEP)
-include $(MAKDEP)

#----------------build target : libutils.a--------------------

libutils.a : CC := gcc
libutils.a : CXX := g++
libutils.a : CXXFLAGS := -pipe -Wall -W -g -fPIC
libutils.a : CPPFLAGS := -DVERSION=\"1.0.0.0\" -g -finline-functions -Wall -Winline -pipe -DHASH_THREAD_SAFE -D_XOPEN_SOURE=500 -D_GNU_SOURCE
libutils.a : IDLFLAGS := 
libutils.a : CFLAGS := -pipe -Wall -W -g -fPIC
libutils.a : INCPATH :=  -I. -I./lib/utils -I./lib/bcommand -I../include $(DEP_INCPATH)
libutils.a : LDLIBS := -lcrypto -lm -lpthread -lpthread -lcrypto -lrt -rdynamic $(DEP_LDLIBS)
libutils.a : LDFLAGS :=  $(DEP_LDFLAGS)
libutils.a : LINKFLAGS := -rdynamic

libutils_a_SOURCES := $(wildcard pgmake_autogen.cpp ./utils/cache_utils.cpp ./utils/fblock_util.cpp ./utils/hilightprocess.cpp ./utils/ip_util.cpp ./utils/sensitive_util.cpp ./utils/stopword.cpp ./utils/utils.cpp)
#libutils_a_HEADERS := $(wildcard *.h *.hpp)
libutils_a_HEADERS := *.h *.hpp
libutils_a_IDLSRC := $(wildcard __$IDLSRC_VALUE$__)
libutils_a_IDLSRCCPP := $(patsubst %.idl,%.cpp, $(libutils_a_IDLSRC))
libutils_a_IDLSRCH := $(patsubst %.idl,%.h, $(libutils_a_IDLSRC))
libutils_a_CONFDES := $(wildcard __$CONFDES$_VALUE$__ libutils.a.des)
libutils_a_CONFRANGE := $(patsubst %.des,%.range, $(libutils_a_CONFDES))
libutils_a_OBJS := $(libutils_a_IDLSRC:.idl=.o)
libutils_a_OBJS += $(libutils_a_SOURCES:.c=.o)
libutils_a_OBJS := $(libutils_a_OBJS:.cc=.o)
libutils_a_OBJS := $(libutils_a_OBJS:.cpp=.o)
libutils_a_OBJS := $(libutils_a_OBJS:.cxx=.o)
libutils_a_OBJS := $(libutils_a_OBJS:.C=.o)
libutils_a_OBJS := $(libutils_a_OBJS:.idl=.o)
libutils_a_OBJS := $(libutils_a_OBJS:.yacc=.o)
libutils_a_OBJS := $(libutils_a_OBJS:.lex=.o)
libutils.a : $(libutils_a_OBJS) 
	rm -f $@ || echo 
	ar cr $@ $^


define libutils_a_output
	mkdir -p output
	-mkdir -p output/lib
	-cp -rf libutils.a output/lib
	-mkdir -p output/include
	-cp -rf $(libutils_a_HEADERS) output/include
	`if [ -e "conf" ];then cp -rf conf output/ ;fi`

endef
	

define libutils_a_clean
	-rm -rf $(libutils_a_OBJS) $(libutils_a_IDLSRCCPP) $(libutils_a_IDLSRCH) libutils.a.range conf/libutils.a.range
	-rm -rf libutils.a
	-rm -rf output
	-rm -rf ccp_output.error   ccp_output_scm.xml  ccp_output.xml ccp_output.pclint  ccp_output.txt
endef
	

define libutils_a_ccpc
	ccp $(libutils_a_SOURCES) --formatter vim
endef
	

define libutils_a_cov
	
endef
	



#---------------------end build target : libutils.a------------------

#----------------build target : libbcommand.a--------------------

libbcommand.a : CC := gcc
libbcommand.a : CXX := g++
libbcommand.a : CXXFLAGS := -pipe -Wall -W -g -fPIC -Wno-unused-function
libbcommand.a : CPPFLAGS := -DVERSION=\"1.0.0.0\" -g -finline-functions -Wall -Winline -pipe -DHASH_THREAD_SAFE -D_XOPEN_SOURE=500 -D_GNU_SOURCE
libbcommand.a : IDLFLAGS := 
libbcommand.a : CFLAGS := -pipe -Wall -W -g -fPIC
libbcommand.a : INCPATH :=  -I. -I./lib/utils -I./lib/bcommand -I../include $(DEP_INCPATH)
libbcommand.a : LDLIBS := -lcrypto -lm -lpthread -lpthread -lcrypto -lrt -rdynamic $(DEP_LDLIBS)
libbcommand.a : LDFLAGS :=  $(DEP_LDFLAGS)
libbcommand.a : LINKFLAGS := -rdynamic

libbcommand_a_SOURCES := $(wildcard pgmake_autogen.cpp ./bcommand/bcommand.cpp)
#libbcommand_a_HEADERS := $(wildcard *.h *.hpp)
libbcommand_a_HEADERS := *.h *.hpp
libbcommand_a_IDLSRC := $(wildcard __$IDLSRC_VALUE$__)
libbcommand_a_IDLSRCCPP := $(patsubst %.idl,%.cpp, $(libbcommand_a_IDLSRC))
libbcommand_a_IDLSRCH := $(patsubst %.idl,%.h, $(libbcommand_a_IDLSRC))
libbcommand_a_CONFDES := $(wildcard __$CONFDES$_VALUE$__ libbcommand.a.des)
libbcommand_a_CONFRANGE := $(patsubst %.des,%.range, $(libbcommand_a_CONFDES))
libbcommand_a_OBJS := $(libbcommand_a_IDLSRC:.idl=.o)
libbcommand_a_OBJS += $(libbcommand_a_SOURCES:.c=.o)
libbcommand_a_OBJS := $(libbcommand_a_OBJS:.cc=.o)
libbcommand_a_OBJS := $(libbcommand_a_OBJS:.cpp=.o)
libbcommand_a_OBJS := $(libbcommand_a_OBJS:.cxx=.o)
libbcommand_a_OBJS := $(libbcommand_a_OBJS:.C=.o)
libbcommand_a_OBJS := $(libbcommand_a_OBJS:.idl=.o)
libbcommand_a_OBJS := $(libbcommand_a_OBJS:.yacc=.o)
libbcommand_a_OBJS := $(libbcommand_a_OBJS:.lex=.o)
libbcommand.a : $(libbcommand_a_OBJS) 
	rm -f $@ || echo 
	ar cr $@ $^


define libbcommand_a_output
	mkdir -p output
	-mkdir -p output/lib
	-cp -rf libbcommand.a output/lib
	-mkdir -p output/include
	-cp -rf $(libbcommand_a_HEADERS) output/include
	`if [ -e "conf" ];then cp -rf conf output/ ;fi`

endef
	

define libbcommand_a_clean
	-rm -rf $(libbcommand_a_OBJS) $(libbcommand_a_IDLSRCCPP) $(libbcommand_a_IDLSRCH) libbcommand.a.range conf/libbcommand.a.range
	-rm -rf libbcommand.a
	-rm -rf output
	-rm -rf ccp_output.error   ccp_output_scm.xml  ccp_output.xml ccp_output.pclint  ccp_output.txt
endef
	

define libbcommand_a_ccpc
	ccp $(libbcommand_a_SOURCES) --formatter vim
endef
	

define libbcommand_a_cov
	
endef
	



#---------------------end build target : libbcommand.a------------------

define _output
	$(libutils_a_output)
	$(libbcommand_a_output)
endef
	

define _clean
	$(libutils_a_clean)
	$(libbcommand_a_clean)
endef
	

ccpc : 
	$(libutils_a_ccpc)
	$(libbcommand_a_ccpc)

cov : 
	cov01 -1
	make clean
	make 
	cov01 -0



output : libutils.a libbcommand.a 
	$(_output)
	rm -rf $(MAKDEP)

$(MAKDEP) : $(wildcard pgmake_autogen.cpp ./utils/cache_utils.cpp ./utils/fblock_util.cpp ./utils/hilightprocess.cpp ./utils/ip_util.cpp ./utils/sensitive_util.cpp ./utils/stopword.cpp ./utils/utils.cpp ./bcommand/bcommand.cpp)
	-$(CC) -MG -MM $(CPPFLAGS) $(INCPATH) $(DEP_INCPATH) $^ > $@

clean:
	$(_clean)
	rm -rf $(MAKDEP)


